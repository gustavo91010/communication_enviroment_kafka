spring.application.name=fornecedor
server.port=8081

##kafka local producer properties
spring.kafka.producer.bootstrap-servers=localhost:29092
# spring.kafka.producer.bootstrap-servers=34.201.185.209:29092
spring.kafka.producer.client-id=financial-producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

#kafka local consumer properties
spring.kafka.consumer.bootstrap-servers=localhost:29092
# spring.kafka.consumer.bootstrap-servers=107.23.71.21:29092
spring.kafka.consumer.group-id=financial-consumer
# a estrategia de ler a mensagem, le apartir da ultima lida
# spring.kafka.consumer.auto-offset-reset=latest
#leia todas as mensagens desde o offset mais antigo
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer


#kafka schema registry configs
spring.kafka.properties.schema.registry.url=http://0.0.0.0:8085
# spring.kafka.properties.schema.registry.url=http://44.219.162.47:8085
spring.kafka.properties.specific.avro.reader=true

#configurando nivel do log
logging.level.org.apache.kafka=WARN
logging.level.io.confluent.kafka.serializers=WARN

#topicos:
spring.kafka.consumer.topic.order= client.order.request
spring.kafka.consumer.topic.financial= financial.order.updated

